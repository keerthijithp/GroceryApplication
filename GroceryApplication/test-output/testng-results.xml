<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="6" failed="0" ignored="0" total="12" passed="6">
  <reporter-output>
  </reporter-output>
  <suite name="MyTestSuite" duration-ms="60851" started-at="2023-02-28T11:27:09Z" finished-at="2023-02-28T11:28:10Z">
    <groups>
      <group name="High">
        <method signature="LoginPageTestCases.verifyLoginWithInvalidCredentials()[pri:0, instance:testCases.LoginPageTestCases@1e127982]" name="verifyLoginWithInvalidCredentials" class="testCases.LoginPageTestCases"/>
        <method signature="LoginPageTestCases.verifyLoginWithInvalidCredentials()[pri:0, instance:testCases.LoginPageTestCases@185d8b6]" name="verifyLoginWithInvalidCredentials" class="testCases.LoginPageTestCases"/>
      </group> <!-- High -->
      <group name="Critical">
        <method signature="LoginPageTestCases.verifyCheckboxRemeneberMeIsSelected()[pri:0, instance:testCases.LoginPageTestCases@1e127982]" name="verifyCheckboxRemeneberMeIsSelected" class="testCases.LoginPageTestCases"/>
        <method signature="LoginPageTestCases.verifyLoginWithValidCredentials()[pri:0, instance:testCases.LoginPageTestCases@1e127982]" name="verifyLoginWithValidCredentials" class="testCases.LoginPageTestCases"/>
        <method signature="LoginPageTestCases.verifyCheckboxRemeneberMeIsSelected()[pri:0, instance:testCases.LoginPageTestCases@185d8b6]" name="verifyCheckboxRemeneberMeIsSelected" class="testCases.LoginPageTestCases"/>
        <method signature="LoginPageTestCases.verifyLoginWithValidCredentials()[pri:0, instance:testCases.LoginPageTestCases@185d8b6]" name="verifyLoginWithValidCredentials" class="testCases.LoginPageTestCases"/>
      </group> <!-- Critical -->
    </groups>
    <test name="ChromeTest" duration-ms="420" started-at="2023-02-28T11:27:09Z" finished-at="2023-02-28T11:27:10Z">
      <class name="testCases.LoginPageTestCases">
        <test-method status="FAIL" signature="beforeMethod(java.lang.String)[pri:0, instance:testCases.LoginPageTestCases@1e127982]" name="beforeMethod" is-config="true" duration-ms="303" started-at="2023-02-28T11:27:09Z" finished-at="2023-02-28T11:27:10Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Chrome]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IllegalStateException">
            <message>
              <![CDATA[The path to the driver executable The path to the driver executable must be set by the webdriver.chrome.driver system property; for more information, see https://chromedriver.chromium.org/. The latest version can be downloaded from https://chromedriver.chromium.org/downloads]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalStateException: The path to the driver executable The path to the driver executable must be set by the webdriver.chrome.driver system property; for more information, see https://chromedriver.chromium.org/. The latest version can be downloaded from https://chromedriver.chromium.org/downloads
at org.openqa.selenium.internal.Require$StateChecker.nonNull(Require.java:314)
at org.openqa.selenium.remote.service.DriverService.findExecutable(DriverService.java:149)
at org.openqa.selenium.chrome.ChromeDriverService.access$000(ChromeDriverService.java:41)
at org.openqa.selenium.chrome.ChromeDriverService$Builder.findDefaultExecutable(ChromeDriverService.java:285)
at org.openqa.selenium.remote.service.DriverService$Builder.build(DriverService.java:456)
at org.openqa.selenium.chrome.ChromeDriverService.createDefaultService(ChromeDriverService.java:146)
at org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:50)
at testCases.BaseClass.beforeMethod(BaseClass.java:40)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:59)
at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:458)
at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:222)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:523)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:40)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:489)
at org.testng.internal.thread.ThreadUtil$1.call(ThreadUtil.java:52)
at java.util.concurrent.FutureTask.run(FutureTask.java:266)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
at java.lang.Thread.run(Thread.java:748)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalStateException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="SKIP" signature="verifyCheckboxRemeneberMeIsSelected()[pri:0, instance:testCases.LoginPageTestCases@1e127982]" name="verifyCheckboxRemeneberMeIsSelected" duration-ms="0" started-at="2023-02-28T11:27:10Z" finished-at="2023-02-28T11:27:10Z">
          <exception class="java.lang.IllegalStateException">
            <message>
              <![CDATA[The path to the driver executable The path to the driver executable must be set by the webdriver.chrome.driver system property; for more information, see https://chromedriver.chromium.org/. The latest version can be downloaded from https://chromedriver.chromium.org/downloads]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalStateException: The path to the driver executable The path to the driver executable must be set by the webdriver.chrome.driver system property; for more information, see https://chromedriver.chromium.org/. The latest version can be downloaded from https://chromedriver.chromium.org/downloads
at org.openqa.selenium.internal.Require$StateChecker.nonNull(Require.java:314)
at org.openqa.selenium.remote.service.DriverService.findExecutable(DriverService.java:149)
at org.openqa.selenium.chrome.ChromeDriverService.access$000(ChromeDriverService.java:41)
at org.openqa.selenium.chrome.ChromeDriverService$Builder.findDefaultExecutable(ChromeDriverService.java:285)
at org.openqa.selenium.remote.service.DriverService$Builder.build(DriverService.java:456)
at org.openqa.selenium.chrome.ChromeDriverService.createDefaultService(ChromeDriverService.java:146)
at org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:50)
at testCases.BaseClass.beforeMethod(BaseClass.java:40)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:59)
at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:458)
at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:222)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:523)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:40)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:489)
at org.testng.internal.thread.ThreadUtil$1.call(ThreadUtil.java:52)
at java.util.concurrent.FutureTask.run(FutureTask.java:266)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
at java.lang.Thread.run(Thread.java:748)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalStateException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyCheckboxRemeneberMeIsSelected -->
        <test-method status="SKIP" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testCases.LoginPageTestCases@1e127982]" name="afterMethod" is-config="true" duration-ms="0" started-at="2023-02-28T11:27:10Z" finished-at="2023-02-28T11:27:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="SKIP" signature="beforeMethod(java.lang.String)[pri:0, instance:testCases.LoginPageTestCases@1e127982]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2023-02-28T11:27:10Z" finished-at="2023-02-28T11:27:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="SKIP" signature="verifyLoginWithInvalidCredentials()[pri:0, instance:testCases.LoginPageTestCases@1e127982]" name="verifyLoginWithInvalidCredentials" duration-ms="0" started-at="2023-02-28T11:27:10Z" finished-at="2023-02-28T11:27:10Z">
          <exception class="java.lang.IllegalStateException">
            <message>
              <![CDATA[The path to the driver executable The path to the driver executable must be set by the webdriver.chrome.driver system property; for more information, see https://chromedriver.chromium.org/. The latest version can be downloaded from https://chromedriver.chromium.org/downloads]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalStateException: The path to the driver executable The path to the driver executable must be set by the webdriver.chrome.driver system property; for more information, see https://chromedriver.chromium.org/. The latest version can be downloaded from https://chromedriver.chromium.org/downloads
at org.openqa.selenium.internal.Require$StateChecker.nonNull(Require.java:314)
at org.openqa.selenium.remote.service.DriverService.findExecutable(DriverService.java:149)
at org.openqa.selenium.chrome.ChromeDriverService.access$000(ChromeDriverService.java:41)
at org.openqa.selenium.chrome.ChromeDriverService$Builder.findDefaultExecutable(ChromeDriverService.java:285)
at org.openqa.selenium.remote.service.DriverService$Builder.build(DriverService.java:456)
at org.openqa.selenium.chrome.ChromeDriverService.createDefaultService(ChromeDriverService.java:146)
at org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:50)
at testCases.BaseClass.beforeMethod(BaseClass.java:40)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:59)
at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:458)
at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:222)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:523)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:40)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:489)
at org.testng.internal.thread.ThreadUtil$1.call(ThreadUtil.java:52)
at java.util.concurrent.FutureTask.run(FutureTask.java:266)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
at java.lang.Thread.run(Thread.java:748)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalStateException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyLoginWithInvalidCredentials -->
        <test-method status="SKIP" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testCases.LoginPageTestCases@1e127982]" name="afterMethod" is-config="true" duration-ms="0" started-at="2023-02-28T11:27:10Z" finished-at="2023-02-28T11:27:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="SKIP" signature="beforeMethod(java.lang.String)[pri:0, instance:testCases.LoginPageTestCases@1e127982]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2023-02-28T11:27:10Z" finished-at="2023-02-28T11:27:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="SKIP" signature="verifyLoginWithValidCredentials()[pri:0, instance:testCases.LoginPageTestCases@1e127982]" name="verifyLoginWithValidCredentials" duration-ms="0" started-at="2023-02-28T11:27:10Z" finished-at="2023-02-28T11:27:10Z">
          <exception class="java.lang.IllegalStateException">
            <message>
              <![CDATA[The path to the driver executable The path to the driver executable must be set by the webdriver.chrome.driver system property; for more information, see https://chromedriver.chromium.org/. The latest version can be downloaded from https://chromedriver.chromium.org/downloads]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalStateException: The path to the driver executable The path to the driver executable must be set by the webdriver.chrome.driver system property; for more information, see https://chromedriver.chromium.org/. The latest version can be downloaded from https://chromedriver.chromium.org/downloads
at org.openqa.selenium.internal.Require$StateChecker.nonNull(Require.java:314)
at org.openqa.selenium.remote.service.DriverService.findExecutable(DriverService.java:149)
at org.openqa.selenium.chrome.ChromeDriverService.access$000(ChromeDriverService.java:41)
at org.openqa.selenium.chrome.ChromeDriverService$Builder.findDefaultExecutable(ChromeDriverService.java:285)
at org.openqa.selenium.remote.service.DriverService$Builder.build(DriverService.java:456)
at org.openqa.selenium.chrome.ChromeDriverService.createDefaultService(ChromeDriverService.java:146)
at org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:50)
at testCases.BaseClass.beforeMethod(BaseClass.java:40)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:59)
at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:458)
at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:222)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:523)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:40)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:489)
at org.testng.internal.thread.ThreadUtil$1.call(ThreadUtil.java:52)
at java.util.concurrent.FutureTask.run(FutureTask.java:266)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
at java.lang.Thread.run(Thread.java:748)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalStateException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyLoginWithValidCredentials -->
        <test-method status="SKIP" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testCases.LoginPageTestCases@1e127982]" name="afterMethod" is-config="true" duration-ms="0" started-at="2023-02-28T11:27:10Z" finished-at="2023-02-28T11:27:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="SKIP" signature="beforeMethod(java.lang.String)[pri:0, instance:testCases.LoginPageTestCases@1e127982]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2023-02-28T11:27:10Z" finished-at="2023-02-28T11:27:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="SKIP" signature="verifyTheBacgrooundColourOfSignInButton()[pri:0, instance:testCases.LoginPageTestCases@1e127982]" name="verifyTheBacgrooundColourOfSignInButton" duration-ms="0" started-at="2023-02-28T11:27:10Z" finished-at="2023-02-28T11:27:10Z">
          <exception class="java.lang.IllegalStateException">
            <message>
              <![CDATA[The path to the driver executable The path to the driver executable must be set by the webdriver.chrome.driver system property; for more information, see https://chromedriver.chromium.org/. The latest version can be downloaded from https://chromedriver.chromium.org/downloads]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalStateException: The path to the driver executable The path to the driver executable must be set by the webdriver.chrome.driver system property; for more information, see https://chromedriver.chromium.org/. The latest version can be downloaded from https://chromedriver.chromium.org/downloads
at org.openqa.selenium.internal.Require$StateChecker.nonNull(Require.java:314)
at org.openqa.selenium.remote.service.DriverService.findExecutable(DriverService.java:149)
at org.openqa.selenium.chrome.ChromeDriverService.access$000(ChromeDriverService.java:41)
at org.openqa.selenium.chrome.ChromeDriverService$Builder.findDefaultExecutable(ChromeDriverService.java:285)
at org.openqa.selenium.remote.service.DriverService$Builder.build(DriverService.java:456)
at org.openqa.selenium.chrome.ChromeDriverService.createDefaultService(ChromeDriverService.java:146)
at org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:50)
at testCases.BaseClass.beforeMethod(BaseClass.java:40)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:59)
at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:458)
at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:222)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:523)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:40)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:489)
at org.testng.internal.thread.ThreadUtil$1.call(ThreadUtil.java:52)
at java.util.concurrent.FutureTask.run(FutureTask.java:266)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
at java.lang.Thread.run(Thread.java:748)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalStateException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyTheBacgrooundColourOfSignInButton -->
        <test-method status="SKIP" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testCases.LoginPageTestCases@1e127982]" name="afterMethod" is-config="true" duration-ms="0" started-at="2023-02-28T11:27:10Z" finished-at="2023-02-28T11:27:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="SKIP" signature="beforeMethod(java.lang.String)[pri:0, instance:testCases.LoginPageTestCases@1e127982]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2023-02-28T11:27:10Z" finished-at="2023-02-28T11:27:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="SKIP" signature="verifyTheTextOfSignInButton()[pri:0, instance:testCases.LoginPageTestCases@1e127982]" name="verifyTheTextOfSignInButton" duration-ms="1" started-at="2023-02-28T11:27:10Z" finished-at="2023-02-28T11:27:10Z">
          <exception class="java.lang.IllegalStateException">
            <message>
              <![CDATA[The path to the driver executable The path to the driver executable must be set by the webdriver.chrome.driver system property; for more information, see https://chromedriver.chromium.org/. The latest version can be downloaded from https://chromedriver.chromium.org/downloads]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalStateException: The path to the driver executable The path to the driver executable must be set by the webdriver.chrome.driver system property; for more information, see https://chromedriver.chromium.org/. The latest version can be downloaded from https://chromedriver.chromium.org/downloads
at org.openqa.selenium.internal.Require$StateChecker.nonNull(Require.java:314)
at org.openqa.selenium.remote.service.DriverService.findExecutable(DriverService.java:149)
at org.openqa.selenium.chrome.ChromeDriverService.access$000(ChromeDriverService.java:41)
at org.openqa.selenium.chrome.ChromeDriverService$Builder.findDefaultExecutable(ChromeDriverService.java:285)
at org.openqa.selenium.remote.service.DriverService$Builder.build(DriverService.java:456)
at org.openqa.selenium.chrome.ChromeDriverService.createDefaultService(ChromeDriverService.java:146)
at org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:50)
at testCases.BaseClass.beforeMethod(BaseClass.java:40)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:59)
at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:458)
at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:222)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:523)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:40)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:489)
at org.testng.internal.thread.ThreadUtil$1.call(ThreadUtil.java:52)
at java.util.concurrent.FutureTask.run(FutureTask.java:266)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
at java.lang.Thread.run(Thread.java:748)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalStateException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyTheTextOfSignInButton -->
        <test-method status="SKIP" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testCases.LoginPageTestCases@1e127982]" name="afterMethod" is-config="true" duration-ms="0" started-at="2023-02-28T11:27:10Z" finished-at="2023-02-28T11:27:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="SKIP" signature="beforeMethod(java.lang.String)[pri:0, instance:testCases.LoginPageTestCases@1e127982]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2023-02-28T11:27:10Z" finished-at="2023-02-28T11:27:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="SKIP" signature="verifyTheTextOftitle7MartSupermarket()[pri:0, instance:testCases.LoginPageTestCases@1e127982]" name="verifyTheTextOftitle7MartSupermarket" duration-ms="0" started-at="2023-02-28T11:27:10Z" finished-at="2023-02-28T11:27:10Z">
          <exception class="java.lang.IllegalStateException">
            <message>
              <![CDATA[The path to the driver executable The path to the driver executable must be set by the webdriver.chrome.driver system property; for more information, see https://chromedriver.chromium.org/. The latest version can be downloaded from https://chromedriver.chromium.org/downloads]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalStateException: The path to the driver executable The path to the driver executable must be set by the webdriver.chrome.driver system property; for more information, see https://chromedriver.chromium.org/. The latest version can be downloaded from https://chromedriver.chromium.org/downloads
at org.openqa.selenium.internal.Require$StateChecker.nonNull(Require.java:314)
at org.openqa.selenium.remote.service.DriverService.findExecutable(DriverService.java:149)
at org.openqa.selenium.chrome.ChromeDriverService.access$000(ChromeDriverService.java:41)
at org.openqa.selenium.chrome.ChromeDriverService$Builder.findDefaultExecutable(ChromeDriverService.java:285)
at org.openqa.selenium.remote.service.DriverService$Builder.build(DriverService.java:456)
at org.openqa.selenium.chrome.ChromeDriverService.createDefaultService(ChromeDriverService.java:146)
at org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:50)
at testCases.BaseClass.beforeMethod(BaseClass.java:40)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:59)
at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:458)
at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:222)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:523)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:40)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:489)
at org.testng.internal.thread.ThreadUtil$1.call(ThreadUtil.java:52)
at java.util.concurrent.FutureTask.run(FutureTask.java:266)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
at java.lang.Thread.run(Thread.java:748)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalStateException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyTheTextOftitle7MartSupermarket -->
        <test-method status="SKIP" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testCases.LoginPageTestCases@1e127982]" name="afterMethod" is-config="true" duration-ms="0" started-at="2023-02-28T11:27:10Z" finished-at="2023-02-28T11:27:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- testCases.LoginPageTestCases -->
    </test> <!-- ChromeTest -->
    <test name="EdgeTest" duration-ms="60851" started-at="2023-02-28T11:27:09Z" finished-at="2023-02-28T11:28:10Z">
      <class name="testCases.LoginPageTestCases">
        <test-method status="PASS" signature="beforeMethod(java.lang.String)[pri:0, instance:testCases.LoginPageTestCases@185d8b6]" name="beforeMethod" is-config="true" duration-ms="9052" started-at="2023-02-28T11:27:09Z" finished-at="2023-02-28T11:27:18Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Edge]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="verifyCheckboxRemeneberMeIsSelected()[pri:0, instance:testCases.LoginPageTestCases@185d8b6]" name="verifyCheckboxRemeneberMeIsSelected" duration-ms="216" started-at="2023-02-28T11:27:18Z" finished-at="2023-02-28T11:27:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyCheckboxRemeneberMeIsSelected -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testCases.LoginPageTestCases@185d8b6]" name="afterMethod" is-config="true" duration-ms="169" started-at="2023-02-28T11:27:19Z" finished-at="2023-02-28T11:27:19Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyCheckboxRemeneberMeIsSelected status=SUCCESS method=LoginPageTestCases.verifyCheckboxRemeneberMeIsSelected()[pri:0, instance:testCases.LoginPageTestCases@185d8b6] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.String)[pri:0, instance:testCases.LoginPageTestCases@185d8b6]" name="beforeMethod" is-config="true" duration-ms="6895" started-at="2023-02-28T11:27:19Z" finished-at="2023-02-28T11:27:26Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Edge]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="verifyLoginWithInvalidCredentials()[pri:0, instance:testCases.LoginPageTestCases@185d8b6]" name="verifyLoginWithInvalidCredentials" duration-ms="815" started-at="2023-02-28T11:27:26Z" finished-at="2023-02-28T11:27:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyLoginWithInvalidCredentials -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testCases.LoginPageTestCases@185d8b6]" name="afterMethod" is-config="true" duration-ms="6538" started-at="2023-02-28T11:27:26Z" finished-at="2023-02-28T11:27:33Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyLoginWithInvalidCredentials status=SUCCESS method=LoginPageTestCases.verifyLoginWithInvalidCredentials()[pri:0, instance:testCases.LoginPageTestCases@185d8b6] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.String)[pri:0, instance:testCases.LoginPageTestCases@185d8b6]" name="beforeMethod" is-config="true" duration-ms="5830" started-at="2023-02-28T11:27:33Z" finished-at="2023-02-28T11:27:39Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Edge]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="verifyLoginWithValidCredentials()[pri:0, instance:testCases.LoginPageTestCases@185d8b6]" name="verifyLoginWithValidCredentials" duration-ms="4379" started-at="2023-02-28T11:27:39Z" finished-at="2023-02-28T11:27:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyLoginWithValidCredentials -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testCases.LoginPageTestCases@185d8b6]" name="afterMethod" is-config="true" duration-ms="160" started-at="2023-02-28T11:27:43Z" finished-at="2023-02-28T11:27:43Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyLoginWithValidCredentials status=SUCCESS method=LoginPageTestCases.verifyLoginWithValidCredentials()[pri:0, instance:testCases.LoginPageTestCases@185d8b6] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.String)[pri:0, instance:testCases.LoginPageTestCases@185d8b6]" name="beforeMethod" is-config="true" duration-ms="5205" started-at="2023-02-28T11:27:43Z" finished-at="2023-02-28T11:27:49Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Edge]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="verifyTheBacgrooundColourOfSignInButton()[pri:0, instance:testCases.LoginPageTestCases@185d8b6]" name="verifyTheBacgrooundColourOfSignInButton" duration-ms="49" started-at="2023-02-28T11:27:49Z" finished-at="2023-02-28T11:27:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyTheBacgrooundColourOfSignInButton -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testCases.LoginPageTestCases@185d8b6]" name="afterMethod" is-config="true" duration-ms="6534" started-at="2023-02-28T11:27:49Z" finished-at="2023-02-28T11:27:55Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyTheBacgrooundColourOfSignInButton status=SUCCESS method=LoginPageTestCases.verifyTheBacgrooundColourOfSignInButton()[pri:0, instance:testCases.LoginPageTestCases@185d8b6] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.String)[pri:0, instance:testCases.LoginPageTestCases@185d8b6]" name="beforeMethod" is-config="true" duration-ms="7537" started-at="2023-02-28T11:27:55Z" finished-at="2023-02-28T11:28:03Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Edge]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="verifyTheTextOfSignInButton()[pri:0, instance:testCases.LoginPageTestCases@185d8b6]" name="verifyTheTextOfSignInButton" duration-ms="64" started-at="2023-02-28T11:28:03Z" finished-at="2023-02-28T11:28:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyTheTextOfSignInButton -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testCases.LoginPageTestCases@185d8b6]" name="afterMethod" is-config="true" duration-ms="178" started-at="2023-02-28T11:28:03Z" finished-at="2023-02-28T11:28:03Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyTheTextOfSignInButton status=SUCCESS method=LoginPageTestCases.verifyTheTextOfSignInButton()[pri:0, instance:testCases.LoginPageTestCases@185d8b6] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.String)[pri:0, instance:testCases.LoginPageTestCases@185d8b6]" name="beforeMethod" is-config="true" duration-ms="6877" started-at="2023-02-28T11:28:03Z" finished-at="2023-02-28T11:28:10Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Edge]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="verifyTheTextOftitle7MartSupermarket()[pri:0, instance:testCases.LoginPageTestCases@185d8b6]" name="verifyTheTextOftitle7MartSupermarket" duration-ms="105" started-at="2023-02-28T11:28:10Z" finished-at="2023-02-28T11:28:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyTheTextOftitle7MartSupermarket -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testCases.LoginPageTestCases@185d8b6]" name="afterMethod" is-config="true" duration-ms="189" started-at="2023-02-28T11:28:10Z" finished-at="2023-02-28T11:28:10Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyTheTextOftitle7MartSupermarket status=SUCCESS method=LoginPageTestCases.verifyTheTextOftitle7MartSupermarket()[pri:0, instance:testCases.LoginPageTestCases@185d8b6] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- testCases.LoginPageTestCases -->
    </test> <!-- EdgeTest -->
  </suite> <!-- MyTestSuite -->
</testng-results>
